{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Colaborador/webpf/my-webpf/frontend/src/services/apiClient.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const apiClient = axios.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_URL,\r\n});\r\n"],"names":[],"mappings":";;;AAAA;;;;;;AAEO,MAAM,YAAY,0GAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACpC,OAAO;AACT"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Colaborador/webpf/my-webpf/frontend/src/services/api.ts"],"sourcesContent":["import { apiClient } from \"./apiClient\";\r\n\r\nexport async function analyzeContent(formData: FormData) {\r\n  const response = await apiClient.post(\"/upload\", formData, {\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n  });\r\n  return response.data;\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;;;;;AAEO,eAAe,eAAe,QAAkB;IACrD,MAAM,WAAW,MAAM,qHAAA,CAAA,YAAS,CAAC,IAAI,CAAC,WAAW,UAAU;QACzD,SAAS;YAAE,gBAAgB;QAAsB;IACnD;IACA,OAAO,SAAS,IAAI;AACtB"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/pages/planotestes/style.module.scss.module.css [ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"button\": \"style-module-scss-module__yXhgZq__button\",\n  \"container\": \"style-module-scss-module__yXhgZq__container\",\n  \"fileInput\": \"style-module-scss-module__yXhgZq__fileInput\",\n  \"fullscreenSpinner\": \"style-module-scss-module__yXhgZq__fullscreenSpinner\",\n  \"inputGroup\": \"style-module-scss-module__yXhgZq__inputGroup\",\n  \"label\": \"style-module-scss-module__yXhgZq__label\",\n  \"labelHeader\": \"style-module-scss-module__yXhgZq__labelHeader\",\n  \"preformattedText\": \"style-module-scss-module__yXhgZq__preformattedText\",\n  \"result\": \"style-module-scss-module__yXhgZq__result\",\n  \"select\": \"style-module-scss-module__yXhgZq__select\",\n  \"spin\": \"style-module-scss-module__yXhgZq__spin\",\n  \"spinner\": \"style-module-scss-module__yXhgZq__spinner\",\n  \"table\": \"style-module-scss-module__yXhgZq__table\",\n  \"textarea\": \"style-module-scss-module__yXhgZq__textarea\",\n  \"totalPoints\": \"style-module-scss-module__yXhgZq__totalPoints\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/Header/style.module.scss.module.css [ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"definition\": \"style-module-scss-module__Ooia0G__definition\",\n  \"ella\": \"style-module-scss-module__Ooia0G__ella\",\n  \"ellaWrapper\": \"style-module-scss-module__Ooia0G__ellaWrapper\",\n  \"header\": \"style-module-scss-module__Ooia0G__header\",\n  \"icon\": \"style-module-scss-module__Ooia0G__icon\",\n  \"logoContainer\": \"style-module-scss-module__Ooia0G__logoContainer\",\n  \"nav\": \"style-module-scss-module__Ooia0G__nav\",\n  \"tagline\": \"style-module-scss-module__Ooia0G__tagline\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Colaborador/webpf/my-webpf/frontend/src/components/Header/index.tsx"],"sourcesContent":["import Link from \"next/link\";\r\nimport { FiHome, FiCpu, FiClipboard } from \"react-icons/fi\"; // Ícones do pacote react-icons\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className={styles.header}>\r\n        <div className={styles.logoContainer}>\r\n        <div className={styles.ellaWrapper}>\r\n            <span className={styles.ella}>ELLA</span>\r\n        </div>\r\n        <span className={styles.tagline}>\r\n            A IA a favor do seu futuro\r\n        </span>\r\n        </div>\r\n\r\n      <nav className={styles.nav}>\r\n        <Link href=\"/\">\r\n          <FiHome size={20} className={styles.icon} />\r\n          Início\r\n        </Link>\r\n        <Link href=\"/funcao\">\r\n          <FiCpu size={20} className={styles.icon} />\r\n          Contagem de Pontos de Função\r\n        </Link>\r\n        <Link href=\"/planotestes\">\r\n          <FiClipboard size={20} className={styles.icon} />\r\n          Plano de Testes\r\n        </Link>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AADA,0OAA6D,+BAA+B;;;;;AAG7E,SAAS;IACtB,qBACE,qKAAC;QAAO,WAAW,2JAAA,CAAA,UAAM,CAAC,MAAM;;0BAC5B,qKAAC;gBAAI,WAAW,2JAAA,CAAA,UAAM,CAAC,aAAa;;kCACpC,qKAAC;wBAAI,WAAW,2JAAA,CAAA,UAAM,CAAC,WAAW;kCAC9B,cAAA,qKAAC;4BAAK,WAAW,2JAAA,CAAA,UAAM,CAAC,IAAI;sCAAE;;;;;;;;;;;kCAElC,qKAAC;wBAAK,WAAW,2JAAA,CAAA,UAAM,CAAC,OAAO;kCAAE;;;;;;;;;;;;0BAKnC,qKAAC;gBAAI,WAAW,2JAAA,CAAA,UAAM,CAAC,GAAG;;kCACxB,qKAAC,qHAAA,CAAA,UAAI;wBAAC,MAAK;;0CACT,qKAAC,uIAAA,CAAA,SAAM;gCAAC,MAAM;gCAAI,WAAW,2JAAA,CAAA,UAAM,CAAC,IAAI;;;;;;4BAAI;;;;;;;kCAG9C,qKAAC,qHAAA,CAAA,UAAI;wBAAC,MAAK;;0CACT,qKAAC,uIAAA,CAAA,QAAK;gCAAC,MAAM;gCAAI,WAAW,2JAAA,CAAA,UAAM,CAAC,IAAI;;;;;;4BAAI;;;;;;;kCAG7C,qKAAC,qHAAA,CAAA,UAAI;wBAAC,MAAK;;0CACT,qKAAC,uIAAA,CAAA,cAAW;gCAAC,MAAM;gCAAI,WAAW,2JAAA,CAAA,UAAM,CAAC,IAAI;;;;;;4BAAI;;;;;;;;;;;;;;;;;;;AAM3D"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Colaborador/webpf/my-webpf/frontend/src/pages/planotestes/index.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { analyzeContent } from \"@/services/api\";\r\nimport styles from \"./style.module.scss\";\r\nimport Header from \"@/components/Header\";\r\n\r\nexport default function Funcao() {\r\n  const [inputMode, setInputMode] = useState(\"upload\");\r\n  const [manualText, setManualText] = useState(\"\");\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [result, setResult] = useState<any>(null);\r\n  const [totalPoints, setTotalPoints] = useState<number | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files) {\r\n      setFile(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleAnalyze = async () => {\r\n    if (inputMode === \"upload\" && !file) {\r\n      return alert(\"Por favor, selecione um arquivo.\");\r\n    }\r\n    if (inputMode === \"text\" && !manualText.trim()) {\r\n      return alert(\"Por favor, insira um texto.\");\r\n    }\r\n\r\n    setLoading(true);\r\n    const formData = new FormData();\r\n    const content = inputMode === \"upload\" && file ? \"\" : manualText;\r\n    formData.append(\"prompt\", generatePrompt(content));\r\n    if (inputMode === \"upload\" && file) formData.append(\"file\", file);\r\n    if (inputMode === \"text\") formData.append(\"text\", manualText);\r\n\r\n    try {\r\n      const data = await analyzeContent(formData);\r\n      setResult(parseResult(data.result));\r\n      setTotalPoints(data.totalPoints);\r\n    } catch (error) {\r\n      console.error(\"Erro:\", error);\r\n      alert(\"Erro ao processar a análise.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const generatePrompt = (content: string): string => {\r\n    return `\r\nDesenvolva um **plano de testes baseado no TDD (Test-Driven Development)** para a funcionalidade descrita abaixo. O plano de testes deve incluir:\r\n\r\n### 1. Estrutura do Plano de Testes\r\n- **Cenários de Teste**: Definir os principais cenários com base na funcionalidade descrita.\r\n- **Casos de Teste**: Para cada cenário, incluir:\r\n  - **ID do Caso de Teste**\r\n  - **Descrição do Caso de Teste**\r\n  - **Pré-condições**\r\n  - **Passos**\r\n  - **Resultado Esperado**\r\n- **Mapeamento com Requisitos**: Relacionar regras de negócio e critérios de aceite.\r\n- **Validações de Interface**: Testes para mensagens e botões de navegação.\r\n- **Testes Negativos e de Erro**: Testar entradas inválidas e cenários de erro.\r\n- **Testes de Integração**: Comunicação com **APIs, banco de dados e sistemas externos**.\r\n\r\n### 2. Conteúdo para análise\r\n\"\"\"\r\n${content}\r\n\"\"\"\r\n\r\nRetorne o plano de testes estruturado, considerando as melhores práticas do TDD.`;\r\n  };\r\n\r\n  const parseResult = (resultString: string) => {\r\n    return { text: resultString };\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Header />  \r\n    <div className={styles.container}>\r\n      <h1 className={styles.labelHeader}>Plano de Testes</h1>\r\n      <div className={styles.inputGroup}>\r\n        <label className={styles.label}>Escolha uma Opção de Envio</label>\r\n        <select \r\n          className={styles.select} \r\n          value={inputMode} \r\n          onChange={(e) => setInputMode(e.target.value)}>\r\n          <option value=\"upload\">Upload de Arquivo</option>\r\n          <option value=\"text\">Inserir Texto Manualmente</option>\r\n        </select>\r\n      </div>\r\n\r\n      {inputMode === \"upload\" ? (\r\n        <input className={styles.fileInput} type=\"file\" onChange={handleFileChange} />\r\n      ) : (\r\n        <textarea\r\n          className={styles.textarea}\r\n          placeholder=\"Digite ou cole o texto para análise\"\r\n          value={manualText}\r\n          onChange={(e) => setManualText(e.target.value)}\r\n        />\r\n      )}\r\n\r\n      <button onClick={handleAnalyze} disabled={loading} className={styles.button}>\r\n        {loading ? \"Analisando...\" : \"Enviar para Análise\"}\r\n      </button>\r\n\r\n      {loading && (\r\n        <div className={styles.fullscreenSpinner}>\r\n          <div className={styles.spinner}></div>\r\n          <p>Analisando...</p>\r\n        </div>\r\n      )}\r\n\r\n      {result && (\r\n        <div className={styles.result}>\r\n          <h3>Plano de Testes Gerado</h3>\r\n          <pre className={styles.preformattedText}>{result.text}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}